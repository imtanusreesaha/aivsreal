# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zQmOz3Ep327nLr5yOutahPsA93aClgiM
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import requests

st.set_page_config(
    page_title="ProofPixel",
    page_icon="ü§ñ"
)

st.title('ProofPixel:Real and AI-Generated Image Detection Using Modified Xception Net Architecture')

# ‚úÖ Corrected GitHub raw model URL (no quotes or duplication in assignment)
github_model_url = "https://raw.githubusercontent.com/imtanusreesaha/CUSTOMXCEPTIONET224/d800c4b3bbfc26e5c523e6643392229836f7cefb/customxception224.h5"

# ‚úÖ Cache the model loading
@st.cache_resource
def load_model(github_model_url):
    response = requests.get(github_model_url)
    with open("customxceptionet224.h5", "wb") as f:
        f.write(response.content)
    model = tf.keras.models.load_model("customxceptionet224.h5")
    return model

model = load_model(github_model_url)
# Custom CSS for background and fonts
st.markdown(
    """
    <style>
    /* Set background color for the whole app */
    .stApp {
        background-color: #f0f2f6;
        /* You can use any color code here */
    }

    /* Set font family and color globally */
    html, body, [class*="css"]  {
        font-family: 'Montserrat', sans-serif;
        color: #333333;
    }

    /* Customize the title font size and weight */
    .css-10trblm e16nr0p33 {  /* Streamlit's h1 class changes, might need update */
        font-size: 3rem;
        font-weight: 700;
        color: #1f2937;
    }

    /* Customize headers (h2, h3, etc.) */
    h2, h3, h4 {
        font-family: 'Roboto', sans-serif;
        color: #374151;
    }

    /* Customize buttons */
    .stButton > button {
        background-color: #2563eb;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 10px 24px;
    }
    .stButton > button:hover {
        background-color: #1e40af;
        color: white;
    }
    </style>

    <!-- Import Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Roboto&display=swap" rel="stylesheet">
    """,
    unsafe_allow_html=True
)

def classify_image(file_path):
    image = Image.open(file_path)
    image = image.resize((32, 32))
    img = np.asarray(image)
    img = np.expand_dims(img / 255.0, axis=0)
    predictions = model.predict(img)
    return 'REAL' if predictions > 0.5 else 'SYNTHETIC'

st.write("Upload an image to check whether it is an AI-Generated Image or a Real Image.")

file_uploaded = st.file_uploader("Choose the Image File", type=["jpg", "jpeg"])

if st.button('Check', use_container_width=True):
    if file_uploaded is not None:
        res = classify_image(file_uploaded)
        c1, buff, c2 = st.columns([2, 0.5, 2])
        c1.image(file_uploaded, use_column_width=True)
        c2.subheader("Classification Result")
        c2.write(f"The image is classified as **{res.title()}**.")
    else:
        st.error('Please upload an image to verify.', icon="‚ùå")

